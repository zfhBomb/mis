var React=require("react");
var QueryTool=require("./queryTool.js");
var Ajax=require("../common/ajax.js");
var message=require("antd/lib/message");


var StatisticalDefects=React.createClass({
	mixins:[Ajax],
	getInitialState:function(){
		return {
			data:{}
		}
	},
	showErrMessage:function(){
		message.config({
			  top: 200,
			  duration: 2,
			});
		message.error('请填写完整时间');
	},
	getValue:function(val){
		if(val[0].value.startValue&&val[0].value.endValue){
			this.ajax("/statistical",{time:val[0].value,factory:this.props.user.factory})
		}else{
			this.showErrMessage();
		}	
	},
	loadSuccess:function(data){
		this.setState({data:data},function(){
			this.renderCharts();
		}.bind(this));
	},
	renderCharts:function(){
		require.ensure([], function(require) {
			    var echarts = require('../../cdn/echarts.min.js');
			    var myChart1 = echarts.init(this.refs.charts1);
				var option1 = {
			    title : {
			        text: '缺陷类型统计',
			        x:'center'
			    },
			    tooltip : {
			        trigger: 'item',
			        formatter: "{a} <br/>{b} : {c} ({d}%)"
			    },
			    legend: {
			        orient : 'vertical',
			        x : 'left',
			        data:['一类缺陷','二类缺陷','三类缺陷']
			    },
			    toolbox: {
			        show : true,
			        feature : {
			            mark : {show: true},
			            dataView : {show: true, readOnly: false},
			            magicType : {
			                show: true, 
			                type: ['pie', 'funnel'],
			                option: {
			                    funnel: {
			                        x: '25%',
			                        width: '50%',
			                        funnelAlign: 'left',
			                        max: 1548
			                    }
			                }
			            },
			            restore : {show: true},
			            saveAsImage : {show: true}
			        }
			    },
			    calculable : true,
			    series : [
			        {
			            name:'缺陷类型',
			            type:'pie',
			            radius : '55%',
			            center: ['50%', '60%'],
			            data:[
			                {value:this.state.data["一类缺陷"], name:'一类缺陷'},
			                {value:this.state.data["二类缺陷"], name:'二类缺陷'},
			                {value:this.state.data["三类缺陷"], name:'三类缺陷'}
			            ]
			        }
			    ]
			};			
			myChart1.setOption(option1); 
			
			
			var myChart2 = echarts.init(this.refs.charts2);
            var	option2 = {
			    color: ['#3398DB'],
			    tooltip : {
			        trigger: 'axis',
			        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
			            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
			        }
			    },
			    toolbox: {
			        show : true,
			        feature : {
			            mark : {show: true},
			            dataView : {show: true, readOnly: false},
			            magicType : {
			                show: true, 
			                type: ['bar', 'funnel'],
			                option: {
			                    funnel: {
			                        x: '25%',
			                        width: '50%',
			                        funnelAlign: 'left',
			                        max: 1548
			                    }
			                }
			            },
			            restore : {show: true},
			            saveAsImage : {show: true}
			        }
			    },
			    grid: {
			        left: '3%',
			        right: '4%',
			        bottom: '3%',
			        containLabel: true
			    },
			    xAxis : [
			        {
			            type : 'category',
			            data : ['汽机', '电气', '锅炉', '化水', '热控'],
			            axisTick: {
			                alignWithLabel: true
			            }
			        }
			    ],
			    yAxis : [
			        {
			            type : 'value'
			        }
			    ],
			    series : [
			        {
			            name:'缺陷数量',
			            type:'bar',
			            barWidth: '60%',
			            data:[this.state.data["锅炉专业"], this.state.data["汽机专业"], this.state.data["电气专业"], this.state.data["化学专业"], this.state.data["热控专业"]]
			        }
			    ]
			};

			myChart2.setOption(option2); 
			
		}.bind(this),"charts");	
	},
	render:function(){
		return (
			<div className="right__pageBox">
				<QueryTool getValue={this.getValue}/>
				<div ref="charts1" className="pageBox__charts1" ></div>
				<div ref="charts2" className="pageBox__charts2" ></div>
			</div>
		)
	}
});

module.exports = StatisticalDefects